FILE ( GLOB_RECURSE ANGRU_SOURCE_FILES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} * )

SET ( ANGRU_TARGET "angru" )

IF ( WIN32 )
    ADD_EXECUTABLE ( ${ANGRU_TARGET} WIN32 ${ANGRU_SOURCE_FILES} )
ELSE (  )
    ADD_EXECUTABLE ( ${ANGRU_TARGET} ${ANGRU_SOURCE_FILES} )
ENDIF (  )

FOREACH ( FLAG ${CXX11_FEATURE_LIST} )
    SET_PROPERTY ( TARGET ${ANGRU_TARGET}
        APPEND PROPERTY COMPILE_DEFINITIONS ${FLAG} )
ENDFOREACH (  )

INCLUDE_DIRECTORIES ( SYSTEM "../include" )

ADD_DEFINITIONS(-DBOOST_LOG_DYN_LINK)

SET_TARGET_PROPERTIES ( ${ANGRU_TARGET} PROPERTIES
    COMPILE_FLAGS "${CMAKE_CXX_FLAGS}" )
SET_TARGET_PROPERTIES ( ${ANGRU_TARGET} PROPERTIES
    LINK_FLAGS "${CMAKE_EXE_LINKER_FLAGS}" )

TARGET_LINK_LIBRARIES ( ${ANGRU_TARGET}
    ${Boost_LIBRARIES} -static
    ${OPENSSL_LIBRARIES}
    ${PGSQL_LIBRARY}
    ${PISTACHE_LIBRARY}
    ${PQXX_LIBRARY} -static
    Threads::Threads
)

IF ( CMAKE_COMPILER_IS_GNUCXX )
    IF ( CMAKE_BUILD_TYPE MATCHES "MinSizeRel"
            OR CMAKE_BUILD_TYPE MATCHES "Release" )
        SET ( ANGRU_EXECUTABLE_PATH $<TARGET_FILE:${ANGRU_TARGET}> )

        ADD_CUSTOM_COMMAND ( TARGET ${ANGRU_TARGET}
            POST_BUILD
            COMMAND strip ${ANGRU_EXECUTABLE_PATH}
            COMMAND strip -R.comment ${ANGRU_EXECUTABLE_PATH}
            WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
        )
    ENDIF (  )
ENDIF (  )

COTIRE ( ${ANGRU_TARGET} )

GET_TARGET_PROPERTY ( ANGRU_TARGET_COMPILE_FLAGS ${ANGRU_TARGET} COMPILE_FLAGS )
GET_TARGET_PROPERTY ( ANGRU_TARGET_LINK_FLAGS ${ANGRU_TARGET} LINK_FLAGS )

MESSAGE ( STATUS "${ANGRU_TARGET} compile flags: ${ANGRU_TARGET_COMPILE_FLAGS}" )
MESSAGE ( STATUS "${ANGRU_TARGET} link flags: ${ANGRU_TARGET_LINK_FLAGS}" )
